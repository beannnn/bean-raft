
#include "slice.hpp"

/* how to async  */

/* 每次写入4KB block */
/* 可以通过一些命令来获取当前raftlog的状态 */

/* 需要实现truncate函数来执行 */

/* commit之后才可以apply才可以提供一个完整的数据。 */

/* 有一些问题：1，日志只会写在一个盘 */
/* Logger持久化引擎 + KV state machine引擎融合，或者说耦合。 */

/* 1，合并日志 */
/* 2, 单线程读写的前提下的并发模型, 后台线程写入其他盘, 可以在这里做多线程 + 多盘。每个盘还是 */
/* 3, WAL还是同一个盘, WAL拆盘显然是不太现实的。 */
/* 3,  */

// 真正地作为一个kv storage. 如果工作。
// 这个项目就是这个实现。
// 是否允许read follower.这些都是需要去实现的。
// 等待即可。强一致读？
// 如果我知道当前存在commit, 

/* raft只是log */

// 多个盘存储数据的结构？ 如何实现？
// 多核系统，cpu如何利用多核的处理能力。

// 当前只考虑单个盘写入log
// 并发能力在于

// 拆成多个盘?
// 每个写WAL?

class RaftLog {
public:
    
private:
    
    
};
